{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObj","post","id","put","concat","delete","Message","message","person","msg","className","DeleteButton","persons","setPersons","setMessage","name","onClick","event","window","confirm","personsService","target","filter","p","catch","error","setTimeout","Header","text","PersonForm","setNewName","setNewNumber","handleChange","newNumber","newName","handleNumChange","onSubmit","isduplicate","preventDefault","forEach","value","number","num","updatedPerson","map","console","log","newPerson","onChange","type","PeopleList","notesToShow","key","Filter","setFilterName","filterName","App","useState","useEffect","initialData","length","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0b7d963.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = `http://localhost:3001/api/persons`\n\nconst getPersons = () =>{\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data)\n}\n\nconst addPerson = (personObj) =>{\n  const request = axios.post(baseUrl, personObj);\n  return request.then(response => response.data)\n}\n\nconst updatePerson = (id, personObj) =>{\n  const request = axios.put(baseUrl.concat(\"/\", id), personObj);\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(baseUrl.concat(\"/\", id));\n  return request.then(response => response.data)\n}\n\nexport default {getPersons, addPerson, updatePerson, deletePerson}\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport personsService from './services/persons.js';\nimport './index.css';\n\nconst Message = ({message}) =>{\n  if (message.person === \"\"){\n    return null\n  }\n  else if (message.msg == \"successfully added\"){\n    return (\n      <div className='success'>\n        {`${message.msg} ${message.person}`}\n      </div>\n    )\n  }else if (message.msg == \"doesnt exist\"){\n    return (\n      <div className='error'>\n        {` ${message.person} ${message.msg}`}\n      </div>\n    )\n  }\n}\nconst DeleteButton = ({persons, person, setPersons, setMessage}) => {\n  const handleClick = (event) => {\n    let result = window.confirm(\"delete????\");\n    if (result){\n      personsService\n        .deletePerson(event.target.name)\n        .then(response => {\n          setPersons(persons.filter(p =>p.id !== person.id))\n        })\n        .catch(error => {\n          setMessage({person: person.name, msg: 'doesnt exist'});\n          setTimeout(() => setMessage({person:\"\", msg:\"\"}), 5000)\n        })\n      }\n  }\n  return <button name={person.id} onClick={handleClick}>Delete</button>\n}\nconst Header = ({text}) => {\n  return <h2>{text}</h2>\n}\nconst PersonForm = ({persons, setPersons, setNewName, setNewNumber, handleChange, newNumber, newName, handleNumChange, setMessage}) =>{\n  const handleSubmit = (event) =>{\n    let isduplicate = false;\n    event.preventDefault();\n    persons.forEach(person => {\n      if (person.name === event.target.name.value){\n        let result = window.confirm(\"Do you want to update?\");\n        if (result){\n          const personObj = {\n            name: person.name,\n            number: event.target.num.value,\n            id: person.id\n          }\n          personsService\n            .updatePerson(person.id, personObj)\n            .then(updatedPerson => setPersons(persons.map(p => p.id !== person.id? p : updatedPerson)))\n            .catch(error => console.log(\"person doesnf exist\"))\n          isduplicate = true;\n        }\n      }\n    });\n    if (!(isduplicate)){\n      const personObj = {\n        name: event.target.name.value,\n        number: event.target.num.value\n      }\n      personsService\n        .addPerson(personObj)\n        .then(newPerson => setPersons(persons.concat(newPerson)))\n        .then(setNewName(''))\n        .then(setNewNumber(''))\n        .then( response => {\n          setMessage({person:personObj.name, msg: \"successfully added\"})\n          setTimeout(() => setMessage({person:\"\", msg: \"\"}), 5000)\n        })\n      isduplicate = false;\n\n    }\n  }\n\n  return(\n  <form onSubmit = {handleSubmit}>\n    <div>\n      name: <input name=\"name\" value={newName} onChange = {handleChange}/>\n    </div>\n    <div>\n      number: <input name=\"num\" value={newNumber} onChange = {handleNumChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>)\n}\nconst PeopleList = ({notesToShow, persons, setPersons, setMessage}) => {\n  return(\n    <ul>\n      {notesToShow.map(person =>\n        <li key = {person.id}>{person.name} - {person.number} <DeleteButton setMessage={setMessage} persons={persons} person={person} setPersons={setPersons} /></li>)}\n    </ul>\n  )\n}\nconst Filter = ({setFilterName, persons, filterName}) => {\n  const handleFilterChange = (event) =>{\n    setFilterName(event.target.value)\n  }\n  return(\n    <>\n      <p>filter shown with</p>\n      <input name=\"filterName\" value={filterName} onChange={handleFilterChange}/>\n    </>\n  )\n\n}\nconst App = () => {\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ persons, setPersons] = useState([])\n  const [ message, setMessage ] = useState({person:\"\", msg:\"\"})\n\n  useEffect(() => {\n    personsService.getPersons().then(initialData => {\n          setPersons(initialData)\n        })\n      }, [])\n\n  const notesToShow = filterName.length === 0\n  ? persons : persons.filter(person => person.name.includes(filterName))\n  const handleChange = (event) =>{\n    setNewName(event.target.value)\n  }\n  const handleNumChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <Header text= \"Phonebook\"/>\n      <Filter persons= {persons} setFilterName = {setFilterName} />\n      <Header text=\"Add new\"/>\n      <Message message = {message}/>\n      <PersonForm\n        persons={persons}\n        setFilterName={setFilterName}\n        newName = {newName}\n        setNewName = {setNewName}\n        setNewNumber = {setNewNumber}\n        newNumber={newNumber}\n        handleNumChange={handleNumChange}\n        handleChange={handleChange}\n        setPersons={setPersons}\n        setMessage={setMessage}\n      />\n      <Header text=\"Numbers\"/>\n      <PeopleList notesToShow={notesToShow} setPersons = {setPersons} setMessage={setMessage} persons={persons}/>\n    </div>\n  )\n}\n\nexport default App\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}